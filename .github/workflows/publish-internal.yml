name: publish-internal

on:
  workflow_dispatch:
    inputs:
      major:
        type: string
        default: "4"
        description: Major version
        required: true
      minor:
        type: string
        default: "0"
        description: Minor version
        required: true
      patch:
        type: string
        default: "0"
        description: Patch version
        required: true
      preview:
        type: string
        default: ""
        description: Preview number
        required: false
      is-final-preview:
        type: boolean
        default: false
        description: Is this a final preview version?
        required: false
      use-build-number:
        type: boolean
        default: true
        description: Append the build number?
        required: false
      additional-suffix:
        type: string
        default: ""
        description: Additional suffix
        required: false

env:
  AZURE_ARTIFACTS_FEED_URL: https://pkgs.dev.azure.com/rigantitfs/DotVVM/_packaging/GitHubPublishTest/nuget/v3/index.json

jobs:
  publish:
    name: Publish
    runs-on: windows-2022
    timeout-minutes: 20
    steps:
    - uses: actions/checkout@v2

    - name: Compose version
      run: >
        $version = $(./.github/workflows/ComposeVersion.ps1 `
          -major "${{ github.event.inputs.major }}" `
          -minor "${{ github.event.inputs.minor }}" `
          -patch "${{ github.event.inputs.patch }}" `
          -preview "${{ github.event.inputs.preview }}" `
          -buildNumber "${{ github.run_number }}" `
          -additionalSuffix "${{ github.event.inputs.additional-suffix }}" `
          -isFinalPreview ${{ format('${0}', github.event.inputs.is-final-preview) }} `
          -useBuildNumber ${{ format('${0}', github.event.inputs.use-build-number) }}) ;
        echo "Version is set to '$version'" ;
        echo "DOTVVM_VERSION=$version" >> "${{ github.env }}"

    - name: Set up
      uses: ./.github/setup
      with:
        azure-artifacts-feed: ${{ env.AZURE_ARTIFACTS_FEED_URL }}
        azure-artifacts-pat: ${{ secrets.AZURE_ARTIFACTS_PAT }}

    - name: DotVVM.Core
      uses: ./.github/pack
      with:
        project: src/Framework/Core

    - name: DotVVM
      uses: ./.github/pack
      with:
        project: src/Framework/Framework

    - name: DotVVM.Owin
      uses: ./.github/pack
      with:
        project: src/Framework/Hosting.Owin

    - name: DotVVM.AspNetCore
      uses: ./.github/pack
      with:
        project: src/Framework/Hosting.AspNetCore

    - name: DotVVM.CommandLine
      uses: ./.github/pack
      with:
        project: src/Tools/CommandLine

    - name: DotVVM.Tools.StartupPerf
      uses: ./.github/pack
      with:
        project: src/Tools/StartupPerfTester

    - name: DotVVM.Api.Swashbuckle.AspNetCore
      uses: ./.github/pack
      with:
        project: src/Api/Swashbuckle.AspNetCore

    - name: DotVVM.Api.Swashbuckle.Owin
      uses: ./.github/pack
      with:
        project: src/Api/Swashbuckle.Owin

    - name: DotVVM.HotReload
      uses: ./.github/pack
      with:
        project: src/Tools/HotReload/Common

    - name: DotVVM.HotReload.AspNetCore
      uses: ./.github/pack
      with:
        project: src/Tools/HotReload/AspNetCore

    - name: DotVVM.HotReload.Owin
      uses: ./.github/pack
      with:
        project: src/Tools/HotReload/Owin

    - name: DotVVM.Testing
      uses: ./.github/pack
      with:
        project: src/Framework/Testing

    - name: DotVVM.DynamicData
      uses: ./.github/pack
      with:
        project: src/DynamicData/DynamicData

    - name: DotVVM.DynamicData.Annotations
      uses: ./.github/pack
      with:
        project: src/DynamicData/Annotations

    - name: DotVVM.Tracing.ApplicationInsights
      uses: ./.github/pack
      with:
        project: src/Tracing/ApplicationInsights

    - name: DotVVM.Tracing.ApplicationInsights.AspNetCore
      uses: ./.github/pack
      with:
        project: src/Tracing/ApplicationInsights.AspNetCore

    - name: DotVVM.Tracing.ApplicationInsights.Owin
      uses: ./.github/pack
      with:
        project: src/Tracing/ApplicationInsights.Owin

    - name: DotVVM.Tracing.MiniProfiler.AspNetCore
      uses: ./.github/pack
      with:
        project: src/Tracing/MiniProfiler.AspNetCore

    - name: DotVVM.Tracing.MiniProfiler.Owin
      uses: ./.github/pack
      with:
        project: src/Tracing/MiniProfiler.Owin

    - name: Prepare signclient
      run: Write-Output "$env:SIGN_CONFIG" | Out-File "${{ github.workspace }}/signconfig.json" && dotnet tool restore
      env:
        SIGN_CONFIG: ${{ secrets.SIGN_CONFIG }}
      working-directory: ${{ github.workspace }}/src

    - name: Sign packages
      run: >
        Get-ChildItem -Path "${{ github.workspace}}/artifacts/packages" -Filter "*.nupkg" | ForEach-Object {
            dotnet signclient sign `
              --baseDirectory "${{ github.workspace}}/artifacts/packages" `
              --input "$($_.Name)" `
              --config "${{ github.workspace }}/signconfig.json" `
              --user "${{ secrets.SIGN_USER }}" `
              --secret "${{ secrets.SIGN_SECRET }}" `
              --name "$($_.BaseName)" `
              --description "$($_.BaseName + " " + $version)" `
              --descriptionUrl "https://github.com/riganti/dotvvm"
        }
      working-directory: ${{ github.workspace }}/src

    - name: dotvvm-types
      run: >
        cd "${{ github.workspace }}/src/Framework/Framework" && `
        npm run dotvvm-types && `
        cd "${{ github.workspace }}/ci/scripts/npm" && `
        cp "${{ github.workspace }}/src/Framework/Framework/obj/dotvvm-types/dotvvm.d.ts" index.d.ts && `
        npm version "$version" --no-git-tag-version

    - name: Publish NuGet packages to the internal feed
      run: >
        Get-ChildItem -Path "${{ github.workspace }}/artifacts/packages" -Filter "*.nupkg" | ForEach-Object {
          dotnet nuget push --api-key AzureArtifacts --source "${{ env.AZURE_ARTIFACTS_FEED_URL }}" "$($_.FullName)"
        }
      working-directory: ${{ github.workspace }}

    - name: Publish dotvvm-types to the internal feed
      uses: JS-DevTools/npm-publish@v1
      with:
        token: ${{ secrets.NPM_TOKEN }}
        package: ${{ github.workspace }}/ci/scripts/npm/package.json
        dry-run: true
